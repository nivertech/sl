/**** BEGIN COPYRIGHT ********************************************************
 *
 * Copyright (C) 2007 - 2012, Rogvall Invest AB, <tony@rogvall.se>
 *
 * This software is licensed as described in the file COPYRIGHT, which
 * you should have received as part of this distribution. The terms
 * are also available at http://www.rogvall.se/docs/copyright.txt.
 *
 * You may opt to use, copy, modify, merge, publish, distribute and/or sell
 * copies of the Software, and permit persons to whom the Software is
 * furnished to do so, under the terms of the COPYRIGHT file.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 **** END COPYRIGHT **********************************************************/
// Generated by eapi (DO NOT EDIT)
#ifndef __SL_DRV_H__
#define __SL_DRV_H__

#define SL_DRV_CMD_OPEN 1
extern void sl_drv_impl_open(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_CONNECT 2
extern void sl_drv_impl_connect(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_DISCONNECT 3
extern void sl_drv_impl_disconnect(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_CLOSE 4
extern void sl_drv_impl_close(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_XON 5
extern void sl_drv_impl_xon(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_XOFF 6
extern void sl_drv_impl_xoff(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_BREAK 7
extern void sl_drv_impl_break(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_UPDATE 8
extern void sl_drv_impl_update(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_REVERT 9
extern void sl_drv_impl_revert(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_SENDCHAR 10
extern void sl_drv_impl_sendchar(eapi_ctx_t* ctx,cbuf_t* c_out,uint8_t c);
#define SL_DRV_CMD_SEND 11
extern void sl_drv_impl_send(eapi_ctx_t* ctx,cbuf_t* c_out,eapi_binary_t* data);
#define SL_DRV_CMD_GET_BAUD_RATES 12
extern void sl_drv_impl_get_baud_rates(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_SET_DEVICE 13
extern void sl_drv_impl_set_device(eapi_ctx_t* ctx,cbuf_t* c_out,eapi_string_t* name);
#define SL_DRV_CMD_SET_IBAUD 14
extern void sl_drv_impl_set_ibaud(eapi_ctx_t* ctx,cbuf_t* c_out,int32_t baud);
#define SL_DRV_CMD_SET_OBAUD 15
extern void sl_drv_impl_set_obaud(eapi_ctx_t* ctx,cbuf_t* c_out,int32_t baud);
#define SL_DRV_CMD_SET_CSIZE 16
extern void sl_drv_impl_set_csize(eapi_ctx_t* ctx,cbuf_t* c_out,int32_t csize);
#define SL_DRV_CMD_SET_BUFSIZE 17
extern void sl_drv_impl_set_bufsize(eapi_ctx_t* ctx,cbuf_t* c_out,int32_t bufsize);
#define SL_DRV_CMD_SET_BUFTM 18
extern void sl_drv_impl_set_buftm(eapi_ctx_t* ctx,cbuf_t* c_out,int32_t buftm);
#define SL_DRV_CMD_SET_STOPB 19
extern void sl_drv_impl_set_stopb(eapi_ctx_t* ctx,cbuf_t* c_out,int32_t stopb);
#define SL_DRV_CMD_SET_PARITY 20
extern void sl_drv_impl_set_parity(eapi_ctx_t* ctx,cbuf_t* c_out,int32_t parity);
#define SL_DRV_CMD_SET_HWFLOW 21
extern void sl_drv_impl_set_hwflow(eapi_ctx_t* ctx,cbuf_t* c_out,uint8_t enable);
#define SL_DRV_CMD_SET_SWFLOW 22
extern void sl_drv_impl_set_swflow(eapi_ctx_t* ctx,cbuf_t* c_out,uint8_t enable);
#define SL_DRV_CMD_SET_XOFFCHAR 23
extern void sl_drv_impl_set_xoffchar(eapi_ctx_t* ctx,cbuf_t* c_out,int32_t c);
#define SL_DRV_CMD_SET_XONCHAR 24
extern void sl_drv_impl_set_xonchar(eapi_ctx_t* ctx,cbuf_t* c_out,int32_t c);
#define SL_DRV_CMD_SET_EOLCHAR 25
extern void sl_drv_impl_set_eolchar(eapi_ctx_t* ctx,cbuf_t* c_out,int32_t c);
#define SL_DRV_CMD_SET_EOL2CHAR 26
extern void sl_drv_impl_set_eol2char(eapi_ctx_t* ctx,cbuf_t* c_out,int32_t c);
#define SL_DRV_CMD_SET_MODE 27
extern void sl_drv_impl_set_mode(eapi_ctx_t* ctx,cbuf_t* c_out,int32_t mode);
#define SL_DRV_CMD_GET_DEVICE 28
extern void sl_drv_impl_get_device(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_GET_IBAUD 29
extern void sl_drv_impl_get_ibaud(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_GET_OBAUD 30
extern void sl_drv_impl_get_obaud(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_GET_CSIZE 31
extern void sl_drv_impl_get_csize(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_GET_BUFSIZE 32
extern void sl_drv_impl_get_bufsize(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_GET_BUFTM 33
extern void sl_drv_impl_get_buftm(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_GET_STOPB 34
extern void sl_drv_impl_get_stopb(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_GET_PARITY 35
extern void sl_drv_impl_get_parity(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_GET_HWFLOW 36
extern void sl_drv_impl_get_hwflow(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_GET_SWFLOW 37
extern void sl_drv_impl_get_swflow(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_GET_XOFFCHAR 38
extern void sl_drv_impl_get_xoffchar(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_GET_XONCHAR 39
extern void sl_drv_impl_get_xonchar(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_GET_EOLCHAR 40
extern void sl_drv_impl_get_eolchar(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_GET_EOL2CHAR 41
extern void sl_drv_impl_get_eol2char(eapi_ctx_t* ctx,cbuf_t* c_out);
#define SL_DRV_CMD_GET_MODE 42
extern void sl_drv_impl_get_mode(eapi_ctx_t* ctx,cbuf_t* c_out);
#endif
